<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">

	<!-- enable Method level [vs URL level] authorization This work for APPLICATION 
		Level scanned components Does NOT recognize WEB level components - for THAT 
		need to place enable line in Dispatcher-servlet -->
	<security:global-method-security pre-post-annotations="enabled" />
	<!-- Use ControllerAdice for Access denied -->

	<security:http use-expressions="true">

		<!-- Need to redirect exception for web authorization -->
		<security:access-denied-handler
			error-page="/error-forbidden" />
		<security:intercept-url pattern="/employees/add" access="hasRole('ROLE_ADMIN')" />
		<!-- <security:intercept-url pattern="/employees" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')" 
			/> -->
		<security:form-login login-page="/login"
			login-processing-url="/postLogin"
			 username-parameter="username"
			password-parameter="password"
			 default-target-url="/employees"
			always-use-default-target="true" authentication-failure-url="/loginfailed" />
		<security:logout logout-success-url="/logout"
			logout-url="/doLogout" />
		</security:http>


	<security:authentication-manager>
		<security:authentication-provider>
			<security:password-encoder hash="bcrypt" />
			<security:jdbc-user-service
				data-source-ref="dataSource"
				users-by-username-query="select USERNAME,PASSWORD,enabled from USERS where username=?"
				authorities-by-username-query="select u1.USERNAME, u2.AUTHORITY from USERS u1, AUTHORITIES u2 where u1.USERNAME = u2.USERNAME and u1.USERNAME =?" />
		</security:authentication-provider>
	</security:authentication-manager>


	<!--security:authentication-manager> <security:authentication-provider> 
		<password-encoder hash="bcrypt" /> <security:user-service> <security:user 
		name="admin" password="admin" authorities="ROLE_ADMIN" /> <security:user 
		name="guest" password="guest" authorities="ROLE_USER" /> </security:user-service> 
		</security:authentication-provider> </security:authentication-manager -->
</beans>
